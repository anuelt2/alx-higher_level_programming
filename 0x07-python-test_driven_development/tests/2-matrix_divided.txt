The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

Import ``matrix_divided`` function from ``2-matrix_divided`` module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test matrix with positive int elements and div:

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test matrix with negative int elements:

	>>> matrix_divided([[-1, -2, -3], [-4, -5, -6]], 3)
	[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

Test matrix with float elements:

	>>> matrix_divided([[1.1, 2.2, 3.3], [4.4, 5.5, 6.6]], 3)
	[[0.37, 0.73, 1.1], [1.47, 1.83, 2.2]]

Test matrix with floats and int elements:

	>>> matrix_divided([[1.1, 2, 3.3], [4, 5.5, 6]], 3)
	[[0.37, 0.67, 1.1], [1.33, 1.83, 2.0]]

Test matrix with one row:

	>>> matrix_divided([[15, 12, 3]], 3)
	[[5.0, 4.0, 1.0]]

Test matrix with one column:

	>>> matrix_divided([[15], [22], [11]], 3)
	[[5.0], [7.33], [3.67]]

Test empty matrix:

	>>> matrix_divided([], 3)
	[]

Test matrix with one element:

	>>> matrix_divided([[5]], 5)
	[[1.0]]

Test matrix with list of empty lists:

	>>> matrix_divided([[], []], 3)
	[[], []]

Test matrix with div < 0:

	>>> matrix_divided([[1.1, 2, 3.3], [4, 5.5, 6]], -3)
	[[-0.37, -0.67, -1.1], [-1.33, -1.83, -2.0]]

Test matrix with div = 'inf'
	>>> matrix_divided([[1.1, 2, 3.3], [4, 5.5, 6]], float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Test matrix with div = 'NaN'
	>>> matrix_divided([[1.1, 2, 3.3], [4, 5.5, 6]], float('NaN'))
	[[nan, nan, nan], [nan, nan, nan]]

Test matrix with non-integer or float elements:

	>>> matrix_divided([[1.1, 2, "hi"], [4, 5.5, 6]], 3)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix with different sized rows:

	>>> matrix_divided([[1.1, 2, 3], [5.5, 6]], 3)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

Test matrix with div = 0:

	>>> matrix_divided([[1.1, 2, 3.3], [4, 5.5, 6]], 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

Test matrix with div not int or float:

	>>> matrix_divided([[1.1, 2, 3.3], [4, 5.5, 6]], "something")
	Traceback (most recent call last):
		...
	TypeError: div must be a number

Test with matrix = None:

	>>> matrix_divided(None, 5)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test with matrix = str:

	>>> matrix_divided("School", 5)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix with no arguments:

	>>> matrix_divided()
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
