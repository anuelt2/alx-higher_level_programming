The ``3-say_my_name`` module
===============================

Using ``say_my_name``
------------------------

Import ``say_my_name`` function from ``3-say_my_name`` module:

	>>> say_my_name = __import__('3-say_my_name').say_my_name

Test with string first_name and last_name:

	>>> say_my_name("Jonathan", "Fosco")
	My name is Jonathan Fosco

Test with first_name only:

	>>> say_my_name("Jonathan")
	My name is Jonathan 

Test with last_name only:

	>>> say_my_name("Jonathan", "")
	My name is Jonathan 

Test with both names empty:

	>>> say_my_name("", "")
	My name is  

Test with both names spaces:
	
	>>> say_my_name(" ", " ")
	My name is    

Test with  special characters in names:

	>>> say_my_name("Jean-Claude", "O'Hare")
	My name is Jean-Claude O'Hare

Test with very long names:

	>>> say_my_name("Ann-Marie-Elizabeth", "Agyeman-Badu-Adusei-Quansah")
	My name is Ann-Marie-Elizabeth Agyeman-Badu-Adusei-Quansah

Test with non-string first_name:

	>>> say_my_name(100, "Opare")
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string

Test with non-string last_name:

	>>> say_my_name("Francis", 18)
	Traceback (most recent call last):
		...
	TypeError: last_name must be a string

Test with non-string names:

	>> say_my_name(21, 22)
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string

Test with no arguments:

	>>> say_my_name()
	Traceback (most recent call last):
		...
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'

